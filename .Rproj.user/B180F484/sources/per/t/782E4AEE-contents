#' A function to read in the real data of NHANES
#' @export read_real_data
#' @param select_ear Either "right" or "left" to choose which ear of data is loaded
#' @return A list that contains two data: the one for functional and multivariate and the other for the label of tympnometry
#' @import foreign
#' @importFrom stats na.exclude
#' @importFrom dplyr inner_join



read_real_data <- function( select_ear = "right"){

### 1. Import the raw data files
## 1-a Audiometry Data
AUX_I <- read.xport(file = system.file("extdata", "AUX_I.xpt", package = "CoFA", mustWork = TRUE))
AUXWBR_I <- read.xport(file = system.file("extdata", "AUXWBR_I.xpt", package = "CoFA", mustWork = TRUE))
AUXTYM_I <- read.xport(file = system.file("extdata", "AUXTYM_I.xpt", package = "CoFA", mustWork = TRUE))

## 2-b Multivariate data
DEMO_I <- read.xport(file = system.file("extdata", "DEMO_I.xpt", package = "CoFA", mustWork = TRUE))
BMX_I <- read.xport(file = system.file("extdata", "BMX_I.xpt", package = "CoFA", mustWork = TRUE))
TCHOL_I <- read.xport(file = system.file("extdata", "TCHOL_I.xpt", package = "CoFA", mustWork = TRUE))
# LBXTC
HDL_I <- read.xport(file = system.file("extdata", "HDL_I.xpt", package = "CoFA", mustWork = TRUE))
# LBDHDD
FOLATE_I <- read.xport(file = system.file("extdata", "FOLATE_I.xpt", package = "CoFA", mustWork = TRUE))
# LBDRFOSI
FOLFMS_I <- read.xport(file = system.file("extdata", "FOLFMS_I.xpt", package = "CoFA", mustWork = TRUE))
# LBDFOTSI, LBXSF2SI


### 2. Inner join to create a single data set
## 2-a Wideband Absorbance
abnormals <- (AUXWBR_I[, which(names(AUXWBR_I) == "WBXA001") : which(names(AUXWBR_I) == "WBXA107")]  <0 ) + (AUXWBR_I[, which(names(AUXWBR_I) == "WBXA001") : which(names(AUXWBR_I) == "WBXA107")]  > 1)
abnormals_indicators <- rowSums(abnormals)
Normal_wideband_data <- AUXWBR_I[ abnormals_indicators == 0 , ]
Normal_wideband_data_right <- Normal_wideband_data[Normal_wideband_data$WBXFEAR==1,]
Normal_wideband_data_left <- Normal_wideband_data[Normal_wideband_data$WBXFEAR==2,]


## 2-b Age
Demo_variable <- DEMO_I[, c("SEQN","RIDAGEYR")]

if( select_ear == "right"){
  data_whole_temp_1 <- inner_join(Normal_wideband_data_right, Demo_variable, by="SEQN")
} else if( select_ear == "left" ) {
  data_whole_temp_1 <- inner_join(Normal_wideband_data_left, Demo_variable, by="SEQN")
}


## 2-c  Body measures (weight, height, BMX)
temp_data <- BMX_I[, c("SEQN","BMXWT", "BMXHT", "BMXBMI")]
data_whole_temp_2 <- inner_join(data_whole_temp_1, temp_data, by="SEQN")


## 2-d Physical volume of ear canal
if( select_ear == "right"){
  temp_data <- AUX_I[, c("SEQN", "AUXTPVR")]
} else if( select_ear == "left"){
  temp_data <- AUX_I[, c("SEQN", "AUXTPVL")]
}
data_whole_temp_3 <- inner_join(data_whole_temp_2, temp_data, by="SEQN")


## 2-e Cholesterol
temp_data <- TCHOL_I[, c("SEQN", "LBXTC")]
data_whole_temp_4 <- inner_join(data_whole_temp_3, temp_data, by="SEQN")

temp_data <- HDL_I[, c("SEQN", "LBDHDD")]
data_whole_temp_5 <- inner_join(data_whole_temp_4, temp_data, by="SEQN")


## 2-f Folates
temp_data <- FOLATE_I[, c("SEQN", "LBDRFOSI")]
data_whole_temp_6 <- inner_join(data_whole_temp_5, temp_data, by="SEQN")

temp_data <- FOLFMS_I[, c("SEQN", "LBDFOTSI","LBXSF2SI")]
data_whole_temp_7 <- inner_join(data_whole_temp_6, temp_data, by="SEQN")


## Label
# data_label <- AUX_I[, c("SEQN", "AUATYMTR", "AUXROTSP", "AUATYMTL", "AUXOTSPL")]
# data_label <- AUX_I[, c("SEQN", "AUATYMTL", "AUXOTSPL")]

## 2-g Labels
if( select_ear == "right"){
  data_label <- AUX_I[, c("SEQN", "AUATYMTR", "AUXROTSP")]
} else if( select_ear == "left" ) {
  data_label <- AUX_I[, c("SEQN", "AUATYMTL", "AUXOTSPL")]
}

data_whole_temp_8 <- inner_join(data_whole_temp_7, data_label, by="SEQN")


### 3. Remove some missing data
data_ready <- na.exclude(data_whole_temp_8)

if( select_ear == "right"){
  labels_mat <- na.exclude(data_whole_temp_8)[,c("SEQN", "AUATYMTR", "AUXROTSP")]
} else if( select_ear == "left" ) {
  labels_mat <- na.exclude(data_whole_temp_8)[,c("SEQN", "AUATYMTL", "AUXOTSPL")]
}
res <- list("data_ready" = data_ready, "labels_mat"=labels_mat, "AUXTYM_I"=AUXTYM_I)

return(res)
}

---
title: "CoFA"
author: "Joonho Gong, Luo Xiao, Arnab Maity"
date: "`r Sys.Date()`"
output: rmarkdown::html_document 
vignette: >
  %\VignetteIndexEntry{my-vignette}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

```{r setup}
library(CoFA)
```

## Functions

### CoFA_CrossCov
`CoFA_CrossCov` finds a matrix \(\mathbf{M}\) and its decomposition that minimizes \(\|\mathbf{\Gamma}-\mathbf{M}\|^{2}_{F}+\tau\|\mathbf{M}\|_{\star,\mathbf{w}}\). A small dataset generated in simuloation study is used to demonstrate how this function works. 
fitting the coefficient matrix $B$ in the `mSIM` algorithm. We use a small dataset within the package to demonstrate the the usage of this function.

#### Usage
```{R}
set.seed(1234)
CoFA_fit = CoFA_CrossCov(Y_cent=Y_example_data, Z_cent=Z_example_data, B_tilde=B_tilde_example, gamma=2,
                       control = list(num_fold=5, num_tau=50, num_rep=10) )
```

#### Argument
**Y_cent:**  The centered functional data matrix.

**Z_cent:**  The centered multivariate data matrix.

**B_tilde:**  The orthonomal B-spline basis function matrix.

**gamma:**  The parameter in the adaptive nuclear norm penalty.

**control:**  A list of options for cross validation (CV) to choose an optimal tunning parameter \(\tau\). There are 3 arguments: **num_fold**, **num_tau** and **num_rep**. First, **num_fold** determines the number of folds in CV.  **num_fold** specifies the number of candidates for \(\tau\), which are equally spaced in log scale ranging from 0 to \(\sigma^{\gamma+1}_{1}(\mathbf{\Gamma})\). **num_rep** indicates the number of repetition of CV with resampling folds. The chosen \(\tau\) at each iteration are recorded and their average value is used as the final choice. 


#### Value
**U:**  The output \(U\) matrix after the optimize process such that \(\widehat{\mathbf{M}} = \mathbf{U}\mathbf{D}\mathbf{V}^{T} \).

**V:**  The output V matrix after the optimize process such that \(\widehat{\mathbf{M}} = \mathbf{U}\mathbf{D}\mathbf{V}^{T} \).

**D:**  The output U matrix after the optimize process such that \(\widehat{\mathbf{M}} = \mathbf{U}\mathbf{D}\mathbf{V}^{T} \).

**rank:**  The rank of \(\widehat{\mathbf{M}}\).

**tau_final:**  The average of **tau_final_vec** and used in the penalized minimization as \(\tau\) to get \(\widehat{\mathbf{M}}\).

**tau_final_vec:**  The vector of chosen candidates of \(\tau\) over **num_rep** iterations.


### var_omega_est
`var_omega_est` estimates \(\sigma^{2}_{\omega}\) with the ordinary least square under a constraint that \(sigma^{2}_{\omega}>0\). 

#### Usage
```{r}
# set up parameters
n <- dim(Y_example_data)[1]
m <- dim(Y_example_data)[2]

# Estimates for necessary parameters
K0_est <- CoFA_fit$rank
est_beta <- rep(0, K0_est )

for(j in 1:K0_est){
      est_beta[j] <- diag(CoFA_fit$D)[j] / (t(CoFA_fit$U[,j]) %*% C_tilde_example %*% CoFA_fit$U[,j]   )
}

# Estimate the variance of random noise in multivariate data
var_omega <- var_omega_est(z_data_cent = Z_example_data, V0_mat = CoFA_fit$V,
                                 est_beta_vec =  est_beta,
                                 est_eta_vec = diag(CoFA_fit$D),
                                 est_K0 = CoFA_fit$rank)
var_omega
```

#### Argument
**z_data_cent:**  The centered multivariate data matrix.

**V0_mat:**  The estimated \(\mathbf{V}_{0}\) matrix.

**est_K0:**  The estimate for \(K_{0}\).

**est_beta_vec:**  The vector of the estimates for \(\beta_{k}\). 

**est_eta_vec:**  The vector of the estimates for \(\eta_{k}\).

##### Value
**res:**  The estimate for \(\sigma^{2}_{\omega}\).


### simulation_study
`simulation_study` is used to conduct simulation study with the setting in the reference. There are 3 scenarios with different sample sizes \(n=100,200,500\). It will save the output RData file in the current working directory. For more information, please see the comments and explanation in the R file. Since the control argument of `CoFA_CrossCov` function within this function is set up with intensive CV(both **num_tau** and **num_rep** are 100), it will take a lot of time if **N** is large. 


#### Usage
```{r}
simulation_result <- simulation_study(snr=5, N=1)
```

##### Argument
**snr:**  The signal noise level.

**N:** The number of iteration for each scenario.


#### Value
**results_final:**  The list that contains the simulation study results. It will be also saved in the current working directory. 


### read_real_data
`read_real_data` is used to read in the data files publically available in the National Health and Nutrition Examination Survey (NHANES) data storage. The output will ba a single data matrix with the wideband absorbance (WBA) functionaland scalar variables. For more information, please see the reference and comments in the R file.


#### Usage
```{r}
data_list <- read_real_data(select_ear = "right")
```

##### Argument
**select_ear:**  A character variable to choose either "right" ear WBA data or "left" ear WBA data. 


#### Value
**res:**  The list that contains three data matrix: the data matrix of chosen ear, the tympanometry label matrix, and tympanometric function data matrix. 


### data_application
`data_application` is used to conduct the common factor analysis for the real data of NHANES. The output will ba saved in the current working directory as .rda file. For more information, please see the comments in the R file.


#### Usage
```{r}
data_matrix <- data_application(which_ear = "right", num_knot = 20)
```

##### Argument
**which_ear:**  A character variable to choose either "right" ear WBA data or "left" ear WBA data. 

**num_knot:**  A single or sequence of positive integers specifying the total number of knots used in the analysis. By default, cubic spline basis is chosen so that 8 of the knots will be out of 0 and 1.  


#### Value
**res:**  The list that contains the estimation results and the standardized multivariate data matrix which will be used for `gam_application` and `logistic_application`. It will be also saved as .rda file in the current working directory. 


### gam_application
`gam_application` is used to fit the generalized additive models with different combination of predicted random components. In order to run this function, `real_data_application` must be run beforehand in the same working directory since `gam_application` needs the prediction results. The output will ba saved in the current working directory as .rda file. For more information, please see the comments in the R file.


#### Usage
```{r}
gam_result <- gam_application(which_ear = "right")
```

##### Argument
**which_ear:**  A character variable to choose either "right" ear WBA data or "left" ear WBA data. 


#### Value
**res:**  The list that contains the GAM model fits and the adjusted R-square table. It will be also saved as .rda file in the current working directory. 


### logistic_application
`logistic_application` is used to fit the logistic models with different combination of predicted random components. In order to run this function, `real_data_application` must be run beforehand in the same working directory since `logistic_application` needs the prediction results. The output will ba saved in the current working directory as .rda file. For more information, please see the comments in the R file.


#### Usage
```{r}
logistic_result <- logistic_application(which_ear = "right", num_rep=10)
```

##### Argument
**which_ear:**  A character variable to choose either "right" ear WBA data or "left" ear WBA data. 

**num_rep:**  A numeric value to specify the number of repetition for resampling to alleviate the skewed label distribution. 


#### Value
**res:**  The list that contains the table displaying the average values of the area under curve and which ear data was used. It will be also saved as .rda file in the current working directory. 
